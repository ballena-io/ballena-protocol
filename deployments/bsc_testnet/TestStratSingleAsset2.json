{
  "address": "0xeF24410004D431970b7420291B5e4AD6c90dD2C8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_balleMaster",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_depositToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wantToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "balleMaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strat",
          "type": "address"
        }
      ],
      "name": "emergencyUpgradeTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "panic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govAddress",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharesTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strat",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sharesTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositAmt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wantAmt",
          "type": "uint256"
        }
      ],
      "name": "upgradeFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strat",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wantTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe4a1a5cd52ed312575cf4704a0eed91175236458918914d357cbbaa77f8bd2a9",
  "receipt": {
    "to": null,
    "from": "0xF662c2785A537F9cd75240544624f7C52d539355",
    "contractAddress": "0xeF24410004D431970b7420291B5e4AD6c90dD2C8",
    "transactionIndex": 1,
    "gasUsed": "1359470",
    "logsBloom": "0x
    "blockHash": "0x41dcbe947d8374de5d8692294c7a9e9adf1f1e31f927ef12944829923f733f34",
    "transactionHash": "0xe4a1a5cd52ed312575cf4704a0eed91175236458918914d357cbbaa77f8bd2a9",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 8382076,
        "transactionHash": "0xe4a1a5cd52ed312575cf4704a0eed91175236458918914d357cbbaa77f8bd2a9",
        "address": "0xeF24410004D431970b7420291B5e4AD6c90dD2C8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f662c2785a537f9cd75240544624f7c52d539355"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x41dcbe947d8374de5d8692294c7a9e9adf1f1e31f927ef12944829923f733f34"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 8382076,
        "transactionHash": "0xe4a1a5cd52ed312575cf4704a0eed91175236458918914d357cbbaa77f8bd2a9",
        "address": "0xeF24410004D431970b7420291B5e4AD6c90dD2C8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f662c2785a537f9cd75240544624f7c52d539355",
          "0x0000000000000000000000001607d8db126402a1287e33b39005ebf4ac060793"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x41dcbe947d8374de5d8692294c7a9e9adf1f1e31f927ef12944829923f733f34"
      }
    ],
    "blockNumber": 8382076,
    "cumulativeGasUsed": "5014331",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1607d8db126402a1287E33b39005ebF4aC060793",
    "0xd3B6A0e47A4907B27b748Ce56E53303fbB05Cc9B",
    "0xd3B6A0e47A4907B27b748Ce56E53303fbB05Cc9B"
  ],
  "solcInputHash": "5fa0f86a01bd022976092299683400c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_balleMaster\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wantToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balleMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strat\",\"type\":\"address\"}],\"name\":\"emergencyUpgradeTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govAddress\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strat\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sharesTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"upgradeFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strat\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Implementation of strategy for testing. The strategy will \\\"mine\\\" TEST_LP tokens to simulate a working farm for testing purpouses. It's very simple to facilitate testing. Every time it's harvested, it will add 1% to TEST_LP balance. Will be improved to test fee distribution, etc.\"},\"deposit(uint256)\":{\"details\":\"Function to transfer tokens BalleMaster -> strategy and put it to work. It will leave the tokens here, strategy only for testing purpouses.\"},\"harvest()\":{\"details\":\"Function to harvest benefits and implement strategy steps. It will increase deposited tokens by 1% every time it's called.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Function to transfer tokens strategy -> BalleMaster.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestStrategy.sol\":\"TestStrategy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/interfaces/IMintableERC20.sol\":{\"content\":\"// contracts/interfaces/IMintableERC20.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity 0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMintableERC20 is IERC20 {\\n    function mint(address _to, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0x07902ae24ef2c9bbd7833b21577644b1afc25c8bc23e4271d0573d660e6d1fd2\",\"license\":\"MIT\"},\"contracts/test/TestStrategy.sol\":{\"content\":\"// contracts/mocks/TestStrategy.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity 0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"../interfaces/IMintableERC20.sol\\\";\\n\\ncontract TestStrategy is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    address public balleMaster;\\n    address public depositToken;\\n    address public wantToken;\\n    address public govAddress;\\n    uint256 public depositTotal = 0;\\n    uint256 public sharesTotal = 0;\\n    uint256 public wantTotal = 0;\\n    // Not needed variables, only for this testing strategy to work\\n    bool public paused = false;\\n    bool public retired = false;\\n\\n    /**\\n     * @dev Implementation of strategy for testing.\\n     * The strategy will \\\"mine\\\" TEST_LP tokens to simulate a working farm for testing purpouses.\\n     * It's very simple to facilitate testing. Every time it's harvested, it will add 1% to TEST_LP balance.\\n     * Will be improved to test fee distribution, etc.\\n     */\\n    constructor(\\n        address _balleMaster,\\n        address _depositToken,\\n        address _wantToken\\n    ) {\\n        balleMaster = _balleMaster;\\n        depositToken = _depositToken;\\n        wantToken = _wantToken;\\n\\n        govAddress = msg.sender;\\n        transferOwnership(_balleMaster);\\n    }\\n\\n    /**\\n     * @dev Function to harvest benefits and implement strategy steps.\\n     * It will increase deposited tokens by 1% every time it's called.\\n     */\\n    function harvest() external {\\n        require(msg.sender == govAddress, \\\"!gov\\\");\\n\\n        if (depositTotal == 0) {\\n            return;\\n        }\\n\\n        uint256 earned = IERC20(depositToken).balanceOf(address(this)) / 100;\\n        if (depositToken == wantToken) {\\n            // autocompounding strategy\\n            depositTotal = depositTotal + earned;\\n            IMintableERC20(depositToken).mint(address(this), earned);\\n        } else {\\n            // wantToken maximizer strategy\\n            wantTotal = wantTotal + earned;\\n            IMintableERC20(wantToken).mint(address(this), earned);\\n        }\\n    }\\n\\n    /**\\n     * @dev Function to transfer tokens BalleMaster -> strategy and put it to work.\\n     * It will leave the tokens here, strategy only for testing purpouses.\\n     */\\n    function deposit(uint256 _amount) public onlyOwner returns (uint256) {\\n        require(_amount > 0, \\\"!amount\\\");\\n\\n        IERC20(depositToken).safeTransferFrom(address(msg.sender), address(this), _amount);\\n\\n        uint256 sharesAdded = _amount;\\n        if (depositTotal > 0) {\\n            sharesAdded = (_amount * sharesTotal) / depositTotal;\\n        }\\n        sharesTotal = sharesTotal + sharesAdded;\\n        depositTotal = depositTotal + _amount;\\n        return sharesAdded;\\n    }\\n\\n    /**\\n     * @dev Function to transfer tokens strategy -> BalleMaster.\\n     */\\n    function withdraw(uint256 _amount)\\n        public\\n        onlyOwner\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        require(_amount > 0, \\\"!amount\\\");\\n\\n        uint256 depositAmt = IERC20(depositToken).balanceOf(address(this));\\n        if (_amount > depositAmt) {\\n            _amount = depositAmt;\\n        }\\n\\n        if (depositTotal < _amount) {\\n            _amount = depositTotal;\\n        }\\n\\n        uint256 sharesRemoved = (_amount * sharesTotal) / depositTotal;\\n        if (sharesRemoved > sharesTotal) {\\n            sharesRemoved = sharesTotal;\\n        }\\n        uint256 wantAmount = (wantTotal * sharesRemoved) / sharesTotal;\\n        sharesTotal = sharesTotal - sharesRemoved;\\n        depositTotal = depositTotal - _amount;\\n        wantTotal = wantTotal - wantAmount;\\n\\n        IERC20(depositToken).safeTransfer(msg.sender, _amount);\\n        if (depositToken != wantToken) {\\n            IERC20(wantToken).safeTransfer(msg.sender, wantAmount);\\n        }\\n\\n        return (sharesRemoved, _amount, wantAmount);\\n    }\\n\\n    function upgradeTo(address _strat)\\n        external\\n        onlyOwner\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        require(_strat != address(0), \\\"!strat\\\");\\n        // A real strategy would prepare to upgrade (remove tokens from farm)\\n        // Set allowance for new strat contract\\n        uint256 depositAmt = IERC20(depositToken).balanceOf(address(this));\\n        uint256 wantAmt;\\n        IERC20(depositToken).safeIncreaseAllowance(_strat, depositAmt);\\n        if (depositToken != wantToken) {\\n            wantAmt = IERC20(wantToken).balanceOf(address(this));\\n            IERC20(wantToken).safeIncreaseAllowance(_strat, wantAmt);\\n        }\\n        return (sharesTotal, depositAmt, wantAmt);\\n    }\\n\\n    function emergencyUpgradeTo(address _strat)\\n        external\\n        onlyOwner\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        require(_strat != address(0), \\\"!strat\\\");\\n        // A real strategy would prepare to upgrade (remove tokens from farm)\\n        // Set allowance for new strat contract\\n        uint256 depositAmt = IERC20(depositToken).balanceOf(address(this));\\n        uint256 wantAmt;\\n        IERC20(depositToken).safeIncreaseAllowance(_strat, depositAmt);\\n        if (depositToken != wantToken) {\\n            wantAmt = IERC20(wantToken).balanceOf(address(this));\\n            IERC20(wantToken).safeIncreaseAllowance(_strat, wantAmt);\\n        }\\n        return (sharesTotal, depositAmt, wantAmt);\\n    }\\n\\n    function upgradeFrom(\\n        address _strat,\\n        uint256 _sharesTotal,\\n        uint256 _depositAmt,\\n        uint256 _wantAmt\\n    ) external onlyOwner {\\n        require(_strat != address(0), \\\"!strat\\\");\\n        // A real strategy would prepare to upgrade (remove tokens from farm)\\n        // Transfer tokens\\n\\n        IERC20(depositToken).safeTransferFrom(_strat, address(this), _depositAmt);\\n        depositTotal = IERC20(depositToken).balanceOf(address(this));\\n\\n        if (_wantAmt > 0) {\\n            IERC20(wantToken).safeTransferFrom(_strat, address(this), _wantAmt);\\n            wantTotal = IERC20(wantToken).balanceOf(address(this));\\n        }\\n\\n        sharesTotal = _sharesTotal;\\n\\n        // A real strategy would finish to upgrade (send tokens to farm)\\n    }\\n\\n    function pause() external onlyOwner {\\n        // A real strategy would enter pause mode:\\n        //   - Remove tokens from farm\\n        //   - Clear allowances of third party contracts\\n\\n        // Updating state, not needed on a real one\\n        paused = true;\\n    }\\n\\n    function unpause() external onlyOwner {\\n        // A real strategy would enter active mode:\\n        //   - Set allowances to third party contracts\\n        //   - Send tokens to farm\\n\\n        // Updating state, not needed on a real one\\n        paused = false;\\n    }\\n\\n    function panic() external onlyOwner {\\n        // A real strategy would panic exit farm:\\n        //   - Remove tokens from farm with emergencyWithdraw\\n        //   - Clear allowances of third party contracts\\n\\n        // Updating state, not needed on a real one\\n        paused = true;\\n    }\\n\\n    function retire() external onlyOwner {\\n        // A real strategy would enter retired mode:\\n        //   - Remove tokens from farm\\n        //   - Clear allowances of third party contracts\\n\\n        // Updating state, not needed on a real one\\n        paused = true;\\n    }\\n\\n    function setGov(address _govAddress) public {\\n        require(msg.sender == govAddress, \\\"!gov\\\");\\n        govAddress = _govAddress;\\n    }\\n\\n    function inCaseTokensGetStuck(\\n        address _token,\\n        uint256 _amount,\\n        address _to\\n    ) public {\\n        require(msg.sender == govAddress, \\\"!gov\\\");\\n        require(_token != wantToken, \\\"!safe\\\");\\n        require(_token != depositToken, \\\"!safe\\\");\\n        IERC20(_token).safeTransfer(_to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x1df5cac64114913b43e5b7691a54277f431f80f465a1f8af88393b2a23e54598\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c8063764afb5a116100e3578063bb8926201161008c578063cfad57a211610066578063cfad57a2146102f8578063d23e04801461030b578063f2fde38b1461031e57610198565b8063bb892620146102d2578063bdccc823146101f2578063c89039c5146102e557610198565b80638da5cb5b116100bd5780638da5cb5b146102ae578063a4874d7714610259578063b6b55f25146102bf57610198565b8063764afb5a146102925780637c10eef21461029b5780638456cb591461025957610198565b80634641257d116101455780635c975abb1161011f5780635c975abb1461026a57806367206d4014610277578063715018a61461028a57610198565b80634641257d146102515780634700d305146102595780634adae0da1461026157610198565b80633f4ba83a116101765780633f4ba83a1461020557806344a3955e1461020f57806346008a071461022657610198565b80632e1a7d4d1461019d5780632eb38ae0146101d05780633659cfe6146101f2575b600080fd5b6101b06101ab3660046113ff565b610331565b604080519384526020840192909252908201526060015b60405180910390f35b6008546101e290610100900460ff1681565b60405190151581526020016101c7565b6101b0610200366004611352565b61053f565b61020d610736565b005b61021860065481565b6040519081526020016101c7565b600454610239906001600160a01b031681565b6040516001600160a01b0390911681526020016101c7565b61020d61078a565b61020d610974565b61021860055481565b6008546101e29060ff1681565b61020d61028536600461136c565b6109cb565b61020d610ab3565b61021860075481565b61020d6102a93660046113a7565b610b45565b6000546001600160a01b0316610239565b6102186102cd3660046113ff565b610d07565b600154610239906001600160a01b031681565b600254610239906001600160a01b031681565b61020d610306366004611352565b610df3565b600354610239906001600160a01b031681565b61020d61032c366004611352565b610e58565b60008080336001600160a01b03166103516000546001600160a01b031690565b6001600160a01b03161461039a5760405162461bcd60e51b8152602060048201819052602482015260008051602061152f83398151915260448201526064015b60405180910390fd5b600084116103d45760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610391565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561041857600080fd5b505afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190611417565b90508085111561045e578094505b84600554101561046e5760055494505b60006005546006548761048191906114b6565b61048b9190611496565b905060065481111561049c57506006545b6000600654826007546104af91906114b6565b6104b99190611496565b9050816006546104c991906114d5565b6006556005546104da9088906114d5565b6005556007546104eb9082906114d5565b600755600254610505906001600160a01b03163389610f60565b6003546002546001600160a01b0390811691161461053457600354610534906001600160a01b03163383610f60565b909690945092505050565b60008080336001600160a01b031661055f6000546001600160a01b031690565b6001600160a01b0316146105a35760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b6001600160a01b0384166105e25760405162461bcd60e51b8152602060048201526006602482015265085cdd1c985d60d21b6044820152606401610391565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561062657600080fd5b505afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e9190611417565b60025490915060009061067b906001600160a01b03168784610ff0565b6003546002546001600160a01b03908116911614610728576003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156106d657600080fd5b505afa1580156106ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070e9190611417565b600354909150610728906001600160a01b03168783610ff0565b600654969195509350915050565b6000546001600160a01b0316331461077e5760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b6008805460ff19169055565b6004546001600160a01b031633146107cd5760405162461bcd60e51b81526004016103919060208082526004908201526310b3b7bb60e11b604082015260600190565b6005546107d957610972565b6002546040516370a0823160e01b81523060048201526000916064916001600160a01b03909116906370a082319060240160206040518083038186803b15801561082257600080fd5b505afa158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a9190611417565b6108649190611496565b6003546002549192506001600160a01b03918216911614156108fa578060055461088e919061147e565b6005556002546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b50505050610970565b80600754610908919061147e565b6007556003546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561095757600080fd5b505af115801561096b573d6000803e3d6000fd5b505050505b505b565b6000546001600160a01b031633146109bc5760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b6008805460ff19166001179055565b6004546001600160a01b03163314610a0e5760405162461bcd60e51b81526004016103919060208082526004908201526310b3b7bb60e11b604082015260600190565b6003546001600160a01b0384811691161415610a545760405162461bcd60e51b8152602060048201526005602482015264217361666560d81b6044820152606401610391565b6002546001600160a01b0384811691161415610a9a5760405162461bcd60e51b8152602060048201526005602482015264217361666560d81b6044820152606401610391565b610aae6001600160a01b0384168284610f60565b505050565b6000546001600160a01b03163314610afb5760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610b8d5760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b6001600160a01b038416610bcc5760405162461bcd60e51b8152602060048201526006602482015265085cdd1c985d60d21b6044820152606401610391565b600254610be4906001600160a01b03168530856110b7565b6002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611417565b6005558015610cff57600354610c80906001600160a01b03168530846110b7565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610cc357600080fd5b505afa158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb9190611417565b6007555b505060065550565b600080546001600160a01b03163314610d505760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b60008211610d8a5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610391565b600254610da2906001600160a01b03163330856110b7565b600554829015610dc957600554600654610dbc90856114b6565b610dc69190611496565b90505b80600654610dd7919061147e565b600655600554610de890849061147e565b60055590505b919050565b6004546001600160a01b03163314610e365760405162461bcd60e51b81526004016103919060208082526004908201526310b3b7bb60e11b604082015260600190565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ea05760405162461bcd60e51b8152602060048201819052602482015260008051602061152f8339815191526044820152606401610391565b6001600160a01b038116610f055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610391565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b038316602482015260448101829052610aae90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526110ef565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561103c57600080fd5b505afa158015611050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110749190611417565b61107e919061147e565b6040516001600160a01b0385166024820152604481018290529091506110b190859063095ea7b360e01b90606401610f8c565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526110b19085906323b872dd60e01b90608401610f8c565b6000611144826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111c19092919063ffffffff16565b805190915015610aae578080602001905181019061116291906113df565b610aae5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610391565b60606111d084846000856111da565b90505b9392505050565b60608247101561123b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610391565b843b6112895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610391565b600080866001600160a01b031685876040516112a5919061142f565b60006040518083038185875af1925050503d80600081146112e2576040519150601f19603f3d011682016040523d82523d6000602084013e6112e7565b606091505b50915091506112f7828286611302565b979650505050505050565b606083156113115750816111d3565b8251156113215782518084602001fd5b8160405162461bcd60e51b8152600401610391919061144b565b80356001600160a01b0381168114610dee57600080fd5b600060208284031215611363578081fd5b6111d38261133b565b600080600060608486031215611380578182fd5b6113898461133b565b92506020840135915061139e6040850161133b565b90509250925092565b600080600080608085870312156113bc578081fd5b6113c58561133b565b966020860135965060408601359560600135945092505050565b6000602082840312156113f0578081fd5b815180151581146111d3578182fd5b600060208284031215611410578081fd5b5035919050565b600060208284031215611428578081fd5b5051919050565b600082516114418184602087016114ec565b9190910192915050565b600060208252825180602084015261146a8160408501602087016114ec565b601f01601f19169190910160400192915050565b6000821982111561149157611491611518565b500190565b6000826114b157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114d0576114d0611518565b500290565b6000828210156114e7576114e7611518565b500390565b60005b838110156115075781810151838201526020016114ef565b838111156110b15750506000910152565b634e487b7160e01b600052601160045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000803000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Implementation of strategy for testing. The strategy will \"mine\" TEST_LP tokens to simulate a working farm for testing purpouses. It's very simple to facilitate testing. Every time it's harvested, it will add 1% to TEST_LP balance. Will be improved to test fee distribution, etc."
      },
      "deposit(uint256)": {
        "details": "Function to transfer tokens BalleMaster -> strategy and put it to work. It will leave the tokens here, strategy only for testing purpouses."
      },
      "harvest()": {
        "details": "Function to harvest benefits and implement strategy steps. It will increase deposited tokens by 1% every time it's called."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "Function to transfer tokens strategy -> BalleMaster."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1661,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "balleMaster",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1663,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "depositToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1665,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "wantToken",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1667,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "govAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1670,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "depositTotal",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1673,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "sharesTotal",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1676,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "wantTotal",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1679,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "paused",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 1682,
        "contract": "contracts/test/TestStrategy.sol:TestStrategy",
        "label": "retired",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}